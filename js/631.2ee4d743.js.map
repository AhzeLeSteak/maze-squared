{"version":3,"file":"js/631.2ee4d743.js","mappings":"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","sources":["webpack://maze-squared/./src/views/Edit.vue?7e58","webpack://maze-squared/./src/Rendering/LevelEditor.ts","webpack://maze-squared/./src/Rendering/CanvasTopView.ts","webpack://maze-squared/./src/views/Edit.vue?ddb2","webpack://maze-squared/./src/views/Edit.vue"],"sourcesContent":["import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"centered\",\n  style: {\"display\":\"flex\"}\n}\nconst _hoisted_2 = { class: \"toolbox\" }\nconst _hoisted_3 = [\"onClick\"]\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"canvas\", { id: \"top-view\" }, null, -1)\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.buttons, (button) => {\n        return (_openBlock(), _createElementBlock(\"button\", {\n          onClick: ($event: any) => (button.onclick()),\n          style: _normalizeStyle(button.style)\n        }, null, 12, _hoisted_3))\n      }), 256))\n    ]),\n    _hoisted_4\n  ]))\n}","import { Game } from \"@/Engine/Game\";\nimport { Vector2 } from \"@/Engine/Vector2\";\n\nexport class LevelEditor {\n  constructor(\n    canvas: HTMLCanvasElement,\n    private readonly tile_size: number,\n    private readonly game: Game\n  ) {\n    this.tile_size = tile_size;\n\n    const set_box = (ev: MouseEvent) => {\n      const v = this.getPos(ev);\n      ev.preventDefault();\n      this.game.map.setBox(v, ev.button === 0 ? 1 : 0);\n    };\n\n    const set_player_pos = (ev: MouseEvent) => {\n      const v = this.getPos(ev);\n      if (game.map.box(v.x, v.y) === 0) {\n        game.player.pos = { ...v };\n        game.player.pos.x += 0.5;\n        game.player.pos.y += 0.5;\n        game.map.map_info.playerPos = v;\n      }\n    };\n\n    canvas.addEventListener(\"click\", set_box);\n    canvas.addEventListener(\"dblclick\", set_player_pos);\n    document.oncontextmenu = (ev) => {\n      ev.preventDefault();\n      set_box(ev);\n    };\n  }\n\n  private getPos(ev: MouseEvent): Vector2 {\n    return {\n      x: Math.floor(ev.offsetX / this.tile_size),\n      y: Math.floor(ev.offsetY / this.tile_size),\n    };\n  }\n}\n","import { Game } from \"@/Engine/Game\";\r\nimport { Vector2 } from \"@/Engine/Vector2\";\r\nimport { degreToRadian } from \"@/Engine/utils\";\r\nimport { LevelEditor } from \"./LevelEditor\";\r\nimport { Canvas2D } from \"./Abstract/Canvas2D\";\r\n\r\nexport class CanvasTopView extends Canvas2D {\r\n    private lvl_editor: LevelEditor;\r\n    private last_player_pos: Vector2;\r\n\r\n\r\n    constructor(game: Game, public readonly tile_size: number, canvas ?: HTMLCanvasElement) {\r\n        super({\r\n            x: game.map.size.y * tile_size,\r\n            y: game.map.size.y * tile_size,\r\n        }, canvas);\r\n        this.lvl_editor = new LevelEditor(this.canvas, this.tile_size, game);\r\n        this.last_player_pos = { x: Infinity, y: Infinity };\r\n    }\r\n\r\n    drawContext(game: Game): void {\r\n        this.reset();\r\n\r\n        this.contextd2D.strokeStyle = \"black\";\r\n        this.contextd2D.font = Math.floor(this.tile_size * 0.3) + \"px Comic sans\";\r\n\r\n        // affichage de la map\r\n        const map = game.map;\r\n        for (let y = 0; y < map.size.y; y++) {\r\n            for (let x = 0; x < map.size.x; x++) {\r\n                const box_type = map.box(x, y);\r\n                switch (box_type) {\r\n                    case 0:\r\n                        this.contextd2D.fillStyle = \"grey\";\r\n                        break;\r\n                    case 1:\r\n                        this.contextd2D.fillStyle = \"black\";\r\n                        break;\r\n                    default:\r\n                        this.contextd2D.fillStyle = \"yellow\";\r\n                }\r\n                this.drawSquare(\r\n                    x * this.tile_size + 1,\r\n                    y * this.tile_size + 1,\r\n                    this.tile_size - 2,\r\n                    this.tile_size - 2\r\n                );\r\n                if (box_type > 1) {\r\n                    this.contextd2D.strokeText(\r\n                        \"\" + (box_type - 1),\r\n                        (x + 0.45) * this.tile_size,\r\n                        (y + 0.6) * this.tile_size\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        const player_pos: Vector2 = { ...game.player.pos };\r\n\r\n        const trunced_pos = {\r\n            x: Math.floor(player_pos.x),\r\n            y: Math.floor(player_pos.y),\r\n        };\r\n\r\n        if (\r\n            trunced_pos.x !== this.last_player_pos.x &&\r\n            trunced_pos.y !== this.last_player_pos.y &&\r\n            game.map.box(trunced_pos.x, trunced_pos.y) > 1\r\n        ) {\r\n            this.last_player_pos = trunced_pos;\r\n            console.warn(\"Player standing on teleporter \", player_pos);\r\n        }\r\n\r\n        player_pos.x *= this.tile_size;\r\n        player_pos.y *= this.tile_size;\r\n\r\n        const x = Math.floor(game.player.pos.x) * this.tile_size;\r\n        const y = Math.floor(game.player.pos.y) * this.tile_size;\r\n\r\n        this.contextd2D.fillStyle = \"rgba(100, 250, 100, 0.4)\";\r\n        this.drawSquare(x + 1, y + 1, this.tile_size - 2, this.tile_size - 2);\r\n\r\n        // affichage des rayons\r\n        for (let i = -game.view_angle / 2; i < game.view_angle / 2; i++) {\r\n            for (let j = 0; j < 1; j++) {\r\n                const angle = game.player.angle + (i + j / 2) * degreToRadian;\r\n                const nextWall = map.getNextPoint(game.player.pos, angle);\r\n                nextWall.from === \"HORIZONTAL\"\r\n                    ? this.setColor(55, 200, 40)\r\n                    : this.setColor(50, 85, 255);\r\n                /*this.drawLine(player_pos.x, player_pos.y,\r\n                  nextWall.point.x * this.tile_size, nextWall.point.y * this.tile_size);*/\r\n                this.setColor(255, 250, 500);\r\n                for (const v of nextWall.pointsToDraw) {\r\n                    this.drawSquare(\r\n                        v.x * this.tile_size - 2,\r\n                        v.y * this.tile_size - 2,\r\n                        4,\r\n                        4\r\n                    );\r\n                }\r\n                for (let s_i = 1; s_i < nextWall.pointsToDraw.length; s_i++) {\r\n                    const p0 = nextWall.pointsToDraw[s_i - 1];\r\n                    const p1 = nextWall.pointsToDraw[s_i];\r\n                    if (nextWall.pointBreak.includes(s_i)) {\r\n                        continue;\r\n                    }\r\n                    for (let a = 0; a < 4; a++) {\r\n                        this.drawLine(\r\n                            p0.x * this.tile_size,\r\n                            p0.y * this.tile_size,\r\n                            p1.x * this.tile_size,\r\n                            p1.y * this.tile_size\r\n                        );\r\n                        this.drawLine(\r\n                            p0.x * this.tile_size + a,\r\n                            p0.y * this.tile_size + a,\r\n                            p1.x * this.tile_size + a,\r\n                            p1.y * this.tile_size + a\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // affichage du joueur\r\n        this.contextd2D.strokeStyle = \"red\";\r\n        this.contextd2D.fillStyle = \"red\";\r\n        const player_size = 8;\r\n        this.drawSquare(\r\n            player_pos.x - player_size / 2,\r\n            player_pos.y - player_size / 2,\r\n            player_size,\r\n            player_size\r\n        );\r\n\r\n        // affichage de la direction du joueur\r\n        const x_dir =\r\n            player_pos.x + (Math.cos(game.player.angle) * this.tile_size) / 2;\r\n        const y_dir =\r\n            player_pos.y + (Math.sin(game.player.angle) * this.tile_size) / 2;\r\n        this.drawLine(player_pos.x, player_pos.y, x_dir, y_dir);\r\n\r\n        // affichage de l'angle\r\n        this.contextd2D.fillStyle = \"black\";\r\n        this.contextd2D.font = \"16px Comic sans\";\r\n        this.contextd2D.fillText(\r\n            (game.player.angle / degreToRadian + \"\").substr(0, 5),\r\n            player_pos.x + 10,\r\n            player_pos.y + 10\r\n        );\r\n    }\r\n}\r\n","\r\nimport {defineComponent, PropType} from \"vue\";\r\nimport {Game} from \"@/Engine/Game\";\r\nimport {CanvasTopView} from \"@/Rendering/CanvasTopView\";\r\n\r\n\r\nconst bg = (txt_name: string) => `background-image: url(\"assets/ui/toolbox/${txt_name}.png\")`\r\n\r\nexport default defineComponent({\r\n  name: 'Edit',\r\n  props: {\r\n    game: {\r\n      type: Object as PropType<Game>,\r\n      required: true\r\n    }\r\n  },\r\n  data(){\r\n    return {\r\n      buttons: [\r\n        {\r\n          style: bg('wall_floor'),\r\n          onclick: () => {\r\n            console.log('a');\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  mounted() {\r\n    const renderer = new CanvasTopView(this.game, 64, document.getElementById(\"top-view\") as HTMLCanvasElement);\r\n    this.game.loop([renderer]);\r\n  },\r\n  unmounted() {\r\n    this.game.stop();\r\n  }\r\n})\r\n","import { render } from \"./Edit.vue?vue&type=template&id=265a7b52&ts=true\"\nimport script from \"./Edit.vue?vue&type=script&lang=ts\"\nexport * from \"./Edit.vue?vue&type=script&lang=ts\"\n\nimport \"./Edit.vue?vue&type=style&index=0&id=265a7b52&lang=css\"\n\nimport exportComponent from \"C:\\\\projets_persos\\\\maze-squared\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_hoisted_1","class","style","_hoisted_2","_hoisted_3","_hoisted_4","_createElementVNode","id","render","_ctx","_cache","$props","$setup","$data","$options","_openBlock","_createElementBlock","_Fragment","_renderList","buttons","button","onClick","$event","onclick","_normalizeStyle","LevelEditor","constructor","canvas","tile_size","game","this","set_box","ev","v","getPos","preventDefault","map","setBox","set_player_pos","box","x","y","player","pos","map_info","playerPos","addEventListener","document","oncontextmenu","Math","floor","offsetX","offsetY","CanvasTopView","Canvas2D","super","size","lvl_editor","last_player_pos","Infinity","drawContext","reset","contextd2D","strokeStyle","font","box_type","fillStyle","drawSquare","strokeText","player_pos","trunced_pos","console","warn","i","view_angle","j","angle","degreToRadian","nextWall","getNextPoint","from","setColor","pointsToDraw","s_i","length","p0","p1","pointBreak","includes","a","drawLine","player_size","x_dir","cos","y_dir","sin","fillText","substr","bg","txt_name","defineComponent","name","props","type","Object","required","data","log","mounted","renderer","getElementById","loop","unmounted","stop","__exports__"],"sourceRoot":""}